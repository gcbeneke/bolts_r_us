;; Auto-generated. Do not edit!


(when (boundp 'opt::Bru_irb_rotateBoltGoal)
  (if (not (find-package "OPT"))
    (make-package "OPT"))
  (shadow 'Bru_irb_rotateBoltGoal (find-package "OPT")))
(unless (find-package "OPT::BRU_IRB_ROTATEBOLTGOAL")
  (make-package "OPT::BRU_IRB_ROTATEBOLTGOAL"))

(in-package "ROS")
;;//! \htmlinclude Bru_irb_rotateBoltGoal.msg.html


(defclass opt::Bru_irb_rotateBoltGoal
  :super ros::object
  :slots (_angle ))

(defmethod opt::Bru_irb_rotateBoltGoal
  (:init
   (&key
    ((:angle __angle) 0.0)
    )
   (send-super :init)
   (setq _angle (float __angle))
   self)
  (:angle
   (&optional __angle)
   (if __angle (setq _angle __angle)) _angle)
  (:serialization-length
   ()
   (+
    ;; float64 _angle
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _angle
       (sys::poke _angle (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _angle
     (setq _angle (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get opt::Bru_irb_rotateBoltGoal :md5sum-) "4edb55038e2b888976a0c0c56935341c")
(setf (get opt::Bru_irb_rotateBoltGoal :datatype-) "opt/Bru_irb_rotateBoltGoal")
(setf (get opt::Bru_irb_rotateBoltGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# This is an action definition file, which has three parts: the goal
# the result, and the feedback.
# Part 1: the goal.
#
# The angle in degree the robot to turn, sent by client main
float64 angle

")



(provide :opt/Bru_irb_rotateBoltGoal "4edb55038e2b888976a0c0c56935341c")


